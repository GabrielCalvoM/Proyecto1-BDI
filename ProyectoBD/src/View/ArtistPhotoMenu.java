/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Control.Cursors;
import Control.Insertions;
import Model.Artist;
import java.awt.CardLayout;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

/**
 *
 * @author Gabriel
 */
public class ArtistPhotoMenu extends javax.swing.JPanel {

    private Artist artist;
    private MainFrame mainFrame;
    private JPanel previous;
    
    public ArtistPhotoMenu(MainFrame mainFrame, JPanel previous, Artist artist) {
        initComponents();
        this.mainFrame = mainFrame;
        this.previous = previous;
        this.artist = artist;
        this.initializePhotos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ArtistRelative_Settings = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        jScrollPane16 = new javax.swing.JScrollPane();
        artistPhotos = new javax.swing.JList<>();
        addArtistPic = new javax.swing.JButton();

        ArtistRelative_Settings.setBackground(new java.awt.Color(0, 0, 0));

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Fotos de Artista");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel48)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        BackBtn.setBackground(new java.awt.Color(51, 51, 51));
        BackBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BackBtn.setForeground(new java.awt.Color(255, 255, 255));
        BackBtn.setText("Atrás");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        artistPhotos.setBackground(new java.awt.Color(51, 51, 51));
        artistPhotos.setForeground(new java.awt.Color(255, 255, 255));
        artistPhotos.setModel(new DefaultListModel());
        jScrollPane16.setViewportView(artistPhotos);

        addArtistPic.setBackground(new java.awt.Color(51, 51, 51));
        addArtistPic.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addArtistPic.setForeground(new java.awt.Color(255, 255, 255));
        addArtistPic.setText("Agregar Foto");
        addArtistPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addArtistPicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ArtistRelative_SettingsLayout = new javax.swing.GroupLayout(ArtistRelative_Settings);
        ArtistRelative_Settings.setLayout(ArtistRelative_SettingsLayout);
        ArtistRelative_SettingsLayout.setHorizontalGroup(
            ArtistRelative_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ArtistRelative_SettingsLayout.createSequentialGroup()
                .addGroup(ArtistRelative_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ArtistRelative_SettingsLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ArtistRelative_SettingsLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ArtistRelative_SettingsLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(addArtistPic, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        ArtistRelative_SettingsLayout.setVerticalGroup(
            ArtistRelative_SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArtistRelative_SettingsLayout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(addArtistPic, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(BackBtn)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ArtistRelative_Settings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ArtistRelative_Settings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        mainFrame.showPage("AdminPage", this.previous);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void addArtistPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addArtistPicActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showDialog(fc, "Agregar");
        File imgFile;
        String fileName;
        try {
            imgFile = fc.getSelectedFile();
            fileName = imgFile.getAbsolutePath();
        }
        catch (Exception e) {
            return;
        }
        if (!fileName.toLowerCase().endsWith(".jpg")
            && !fileName.toLowerCase().endsWith(".jpeg")) {
            mainFrame.showError("Solo puede ingresar archivos jpg.");
            return;
        }

        DefaultListModel model = (DefaultListModel) this.artistPhotos.getModel();
        
        if (!model.contains(fileName)) {
            try {
                int photo = Insertions.insertPhoto(fileName);
                Insertions.insertArtistPhoto(photo, this.artist.getId());
                this.initializePhotos();
            } catch (SQLException ex) {}
        } else {
            mainFrame.showError("La imagen ya está agregada");
        }
    }//GEN-LAST:event_addArtistPicActionPerformed

    private void initializePhotos() {
        ArrayList<String> photos = new ArrayList();
        
        try {
            photos = Cursors.getArtistPhotos(this.artist.getId());
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        if (photos.isEmpty()) {
            DefaultListModel model = new DefaultListModel();
            model.addElement("No hay fotos registradas");
            this.artistPhotos.setModel(model);
            return;
        }
        
        DefaultListModel model = this.mainFrame.buildListModel(photos);
        this.artistPhotos.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ArtistRelative_Settings;
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton addArtistPic;
    private javax.swing.JList<String> artistPhotos;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JScrollPane jScrollPane16;
    // End of variables declaration//GEN-END:variables
}
